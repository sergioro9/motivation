!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
.age-label	css/style.css	/^.age-label {$/;"	c
.age-label 	css/style.css	/^.age-label {$/;"	c
.count	css/style.css	/^.count sup {$/;"	c
.count	css/style.css	/^.count {$/;"	c
.count 	css/style.css	/^.count {$/;"	c
.count sup 	css/style.css	/^.count sup {$/;"	c
1	js/handlebars.js	/^                      errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");$/;"	r
1	js/handlebars.js	/^                      errStr = "Parse error on line " + (yylineno + 1) + ":\\n" + this.lexer.showPosition() + "\\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";$/;"	r
1	js/handlebars.js	/^              param = "\\"" + param.replace("\\n", "\\\\n") + "\\"";$/;"	r
1	js/handlebars.js	/^              this.match = '';$/;"	r
1	js/handlebars.js	/^              this.yytext = '';$/;"	r
1	js/handlebars.js	/^              var errStr = "";$/;"	r
1	js/handlebars.js	/^            source += 'buffer += ' + buffer + ';\\n  ';$/;"	r
1	js/handlebars.js	/^          child.name = 'program' + index;$/;"	r
1	js/handlebars.js	/^          inverse = "self.noop";$/;"	r
1	js/handlebars.js	/^          prefix = '(' + this.push(name) + ' = ' + top + '),';$/;"	r
1	js/handlebars.js	/^          program = "self.noop";$/;"	r
1	js/handlebars.js	/^          this.conditionStack = ['INITIAL'];$/;"	r
1	js/handlebars.js	/^          this.context.aliases.self = "this";$/;"	r
1	js/handlebars.js	/^          this.yytext = this.matched = this.match = '';$/;"	r
1	js/handlebars.js	/^          toString: function() { return "buffer += " + string + ";"; }$/;"	r
1	js/handlebars.js	/^        lookup += ',' + helper.paramsInit;$/;"	r
1	js/handlebars.js	/^        out.push(", buffer = " + this.initializeBuffer());$/;"	r
1	js/handlebars.js	/^        this.pushSource(stack + " = " + item + ";");$/;"	r
1	js/handlebars.js	/^        this.pushSource(stack + " = (" + prefix + item + ");");$/;"	r
1	js/handlebars.js	/^        this.source[1] += '\\n' + this.context.programs.join('\\n') + '\\n';$/;"	r
1	js/handlebars.js	/^        this.source[1] = "var " + this.source[1].substring(2) + ";";$/;"	r
1	js/handlebars.js	/^        var copies = "helpers = this.merge(helpers, " + namespace + ".helpers);";$/;"	r
1	js/handlebars.js	/^        var functionSource = 'function ' + (this.name || '') + '(' + params.join(',') + ') {\\n  ' + source + '}';$/;"	r
1	js/handlebars.js	/^      function lex() {$/;"	r
1	js/handlebars.js	/^      function popStack(n) {$/;"	r
1	js/handlebars.js	/^      message += ' - ' + line + ':' + node.firstColumn;$/;"	r
1	js/handlebars.js	/^      objectType = '[object Object]';$/;"	r
1	js/handlebars.js	/^      return "this.compilerInfo = ["+revision+",'"+versions+"'];\\n";$/;"	r
1	js/handlebars.js	/^      this.context.aliases.blockHelperMissing = 'helpers.blockHelperMissing';$/;"	r
1	js/handlebars.js	/^      this.context.aliases.escapeExpression = 'this.escapeExpression';$/;"	r
1	js/handlebars.js	/^      this.context.aliases.functionType = '"function"';$/;"	r
1	js/handlebars.js	/^      this.context.aliases.helperMissing = 'helpers.helperMissing';$/;"	r
1	js/handlebars.js	/^      this.context.aliases.self = "this";$/;"	r
1	js/handlebars.js	/^      this.pushSource('else { helper = ' + nonHelper + '; ' + nextStack + ' = typeof helper === functionType ? helper.call(' + helper.callParams + ') : helper; }');$/;"	r
1	js/handlebars.js	/^      this.pushSource('if (helper = ' + helperName + ') { ' + nextStack + ' = helper.call(' + helper.callParams + '); }');$/;"	r
1	js/handlebars.js	/^      this.pushSource(name + " = " + val + ";");$/;"	r
1	js/handlebars.js	/^      this.stripNext = 'strip';$/;"	r
1	js/handlebars.js	/^      this.type         = "partial";$/;"	r
1	js/handlebars.js	/^      this.type = "BOOLEAN";$/;"	r
1	js/handlebars.js	/^      this.type = "DATA";$/;"	r
1	js/handlebars.js	/^      this.type = "ID";$/;"	r
1	js/handlebars.js	/^      this.type = "INTEGER";$/;"	r
1	js/handlebars.js	/^      this.type = "PARTIAL_NAME";$/;"	r
1	js/handlebars.js	/^      this.type = "STRING";$/;"	r
1	js/handlebars.js	/^      this.type = "comment";$/;"	r
1	js/handlebars.js	/^      this.type = "content";$/;"	r
1	js/handlebars.js	/^      this.type = "hash";$/;"	r
1	js/handlebars.js	/^      this.type = "mustache";$/;"	r
1	js/handlebars.js	/^      this.type = "program";$/;"	r
1	js/handlebars.js	/^      this.type = "sexpr";$/;"	r
1	js/handlebars.js	/^      this.type = 'block';$/;"	r
1	js/handlebars.js	/^      var i = 0, ret = "", data;$/;"	r
1	js/handlebars.js	/^      var lookup = 'helper = ' + helper.name + ' || ' + nonHelper;$/;"	r
1	js/handlebars.js	/^      var options = '{' + this.setupOptions(paramSize, params).join(',') + '}';$/;"	r
1	js/handlebars.js	/^      var original = "",$/;"	r
1	js/handlebars.js	/^      var params = ["depth0"];$/;"	r
1	js/handlebars.js	/^      var prefix = '',$/;"	r
1	js/handlebars.js	/^      var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;$/;"	r
1	js/handlebars.js	/^      var source = '',$/;"	r
1	js/handlebars.js	/^    " continue function this with" +$/;"	r
1	js/handlebars.js	/^    function compileInput() {$/;"	r
1	js/handlebars.js	/^    string = "" + string;$/;"	r
1	js/handlebars.js	/^  \/\/ function in a context. This is necessary for mustache compatibility, which$/;"	r
1	js/handlebars.js	/^  __exports__.escapeExpression = escapeExpression;function isEmpty(value) {$/;"	r
1	js/handlebars.js	/^  __exports__.invokePartial = invokePartial;function noop() { return ""; }$/;"	r
1	js/handlebars.js	/^  __exports__.precompile = precompile;function compile(input, options, env) {$/;"	r
1	js/handlebars.js	/^  __exports__.program = program;function invokePartial(partial, name, context, helpers, partials, data) {$/;"	r
1	js/handlebars.js	/^  __exports__.programWithDepth = programWithDepth;function program(i, fn, data) {$/;"	r
1	js/handlebars.js	/^  __exports__.template = template;function programWithDepth(i, fn, data \/*, $depth *\/) {$/;"	r
1	js/handlebars.js	/^  _currentRules:function _currentRules() {$/;"	r
1	js/handlebars.js	/^  begin:function begin(condition) {$/;"	r
1	js/handlebars.js	/^  function Compiler() {}$/;"	r
1	js/handlebars.js	/^  function Exception(message, node) {$/;"	r
1	js/handlebars.js	/^  function HandlebarsEnvironment(helpers, partials) {$/;"	r
1	js/handlebars.js	/^  function JavaScriptCompiler() {}$/;"	r
1	js/handlebars.js	/^  function Literal(value) {$/;"	r
1	js/handlebars.js	/^  function LocationInfo(locInfo){$/;"	r
1	js/handlebars.js	/^  function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;$/;"	r
1	js/handlebars.js	/^  function SafeString(string) {$/;"	r
1	js/handlebars.js	/^  function checkRevision(compilerInfo) {$/;"	r
1	js/handlebars.js	/^  function escapeChar(chr) {$/;"	r
1	js/handlebars.js	/^  function escapeExpression(string) {$/;"	r
1	js/handlebars.js	/^  function extend(obj, value) {$/;"	r
1	js/handlebars.js	/^  function log(level, obj) { logger.log(level, obj); }$/;"	r
1	js/handlebars.js	/^  function parse(input) {$/;"	r
1	js/handlebars.js	/^  function precompile(input, options, env) {$/;"	r
1	js/handlebars.js	/^  function registerDefaultHelpers(instance) {$/;"	r
1	js/handlebars.js	/^  function strip(start, end) {$/;"	r
1	js/handlebars.js	/^  function stripFlags(open, close) {$/;"	r
1	js/handlebars.js	/^  function template(templateSpec, env) {$/;"	r
1	js/handlebars.js	/^  lex:function lex() {$/;"	r
1	js/handlebars.js	/^  lexer.conditions = {"mu":{"rules":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"inclusive":false},"emu":{"rules":[2],"inclusive":false},"com":{"rules":[3],"inclusive":false},"INITIAL":{"rules":[0,1,32],"inclusive":true}};$/;"	r
1	js/handlebars.js	/^  lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {$/;"	r
1	js/handlebars.js	/^  parse: function parse(input) {$/;"	r
1	js/handlebars.js	/^  parseError: function parseError(str, hash) {$/;"	r
1	js/handlebars.js	/^  parseError:function parseError(str, hash) {$/;"	r
1	js/handlebars.js	/^  performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {$/;"	r
1	js/handlebars.js	/^  popState:function popState() {$/;"	r
1	js/handlebars.js	/^  pushState:function begin(condition) {$/;"	r
1	js/handlebars.js	/^  var VERSION = "1.3.0";$/;"	r
1	js/handlebars.js	/^  var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];$/;"	r
1	js/handlebars.js	/^  var parser = {trace: function trace() { },$/;"	r
after 	css/style.css	/^*:after {$/;"	s
age-label	dashboard.html	/^    <h1 id="dob" class="age-label">Choose motivation category?<\/h1>$/;"	c
age-label	dashboard.html	/^  <h1 class="age-label">AGE<\/h1>$/;"	c
age-template	dashboard.html	/^<script id="age-template" type="text\/x-handlebars-template">$/;"	i
app	dashboard.html	/^<div id="app"><\/div>$/;"	i
app.js	app/app.js	1;"	F
before	css/style.css	/^*:before,$/;"	s
body	css/style.css	/^body {$/;"	t
body	css/style.css	/^body, input {$/;"	s
body	css/style.css	/^body,$/;"	s
body 	css/style.css	/^body {$/;"	s
body, input	css/style.css	/^body, input {$/;"	t
button	css/style.css	/^button {$/;"	t
button 	css/style.css	/^button {$/;"	s
button 	css/style.css	/^input, button {$/;"	s
count	dashboard.html	/^  <h2 class="count">{{year}}<sup>.{{milliseconds}}<\/sup><\/h2>$/;"	c
dashboard.html	dashboard.html	1;"	F
dob	dashboard.html	/^      <input type="date" name="dob" id="dob">$/;"	i
dob	dashboard.html	/^    <h1 id="dob" class="age-label">Choose motivation category?<\/h1>$/;"	i
dob-template	dashboard.html	/^<script id="dob-template" type="text\/x-handlebars-template">$/;"	i
footer	css/style.css	/^footer {$/;"	t
footer 	css/style.css	/^footer {$/;"	s
handlebars.js	js/handlebars.js	1;"	F
html	css/style.css	/^html {$/;"	t
html 	css/style.css	/^html {$/;"	s
input	css/style.css	/^input {$/;"	t
input	css/style.css	/^input, button {$/;"	s
input 	css/style.css	/^body, input {$/;"	s
input 	css/style.css	/^input {$/;"	s
input, button	css/style.css	/^input, button {$/;"	t
label	css/style.css	/^label {$/;"	t
label 	css/style.css	/^label {$/;"	s
motivation.js	motivation.js	1;"	F
style.css	css/style.css	1;"	F
